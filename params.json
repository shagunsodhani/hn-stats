{"name":"Hn-stats","tagline":"Scala client for logging HackerNews karma (for a user) and score (for his submissions)","body":"# hn-stats\r\nScala client for logging Hacker News karma (for a user) and score (for his submissions)\r\n\r\n###Why\r\nI wanted to track changes in my Hacker News karma over time. \r\n\r\n###Why Scala\r\nI learnt Scala some time back but never got to develop anything using it. This would be my first step in that direction.\r\n\r\n###How to use it\r\nPretty straight-forward. Import the project into any IDE and run Main.scala. Ohh and do not forget to copy config.sample.conf to config.conf and populate the fields.\r\n\r\n###What excatly is it doing\r\nIt picks a username from config.conf, then its fetchs the submissions for that user from the [Hacker News API](https://github.com/HackerNews/API).\r\n\r\nFor a new user\r\n* Its `userid`, `username` and `karma` are inserted into a new row into `user` table with `inserted_at` and `updated_at` set to current timestamp.\r\n* `uid`, `updated_at` (=current timestamp) and `karma` is inserted in a new row in `user_score` table.\r\n* All his submissions are downloaded and logged in `submission` table. Corresponding scores are logged in `submission_score` table.\r\n\r\nFor a repeated user\r\n* The row corresponding to this user in `user` table is updated to reflect the new `karma` and `updated_at` ( = current timestamp).\r\n* If there is any change in `karma`,a new row is inserted in `user_score` as before.\r\n* All his new submissions are logged in `submission` table. Corresponding scores are logged in `submission_score` table.\r\n* Scores corresponding to last few (set as `app.numberOfOldSubmissionsToCheck` ) submissions are also updated.","google":"UA-68140113-2","note":"Don't delete this file! It's used internally to help with page regeneration."}